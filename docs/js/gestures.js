import{setTransform}from"./utils.js";class Gesture{constructor(t){Object.assign(this,t)}attach(){document.body.onpointerdown=this.pointerdown,document.body.onpointerup=this.pointerup,document.body.onpointercancel=this.pointerup}}export class Measure extends Gesture{constructor(t){super(t)}pointerdown=t=>{t.target.closest(".port")&&(!1===Number.isInteger(this.x1)?(this.x1=t.clientX,this.y1=t.clientY,document.body.onpointermove=this.pointermove):(this.pointermove(t),this.pointerup()))};toFt(t){const{$scene:e,$view:s,plan:i}=this,{sy:n,z:o=1}=s.dataset,a=e.clientWidth/e.width.baseVal.value,[r,h="0"]=String(t/(a*i.footRatio*n*o)).split(".");return`${r}' ${Math.round(1.2*h[0])}''`}pointermove=({clientX:t,clientY:e})=>{const{$ruler:s,$foots:i}=this,n=Math.abs(this.x1-t),o=Math.abs(this.y1-e);s.classList.remove("width","height"),n>o?(s.style.top=`${this.y1}px`,s.style.left=`${Math.min(this.x1,t)}px`,s.style.width=`${n}px`,s.classList.add("width","apply"),i.textContent=this.toFt(n)):(s.style.top=`${Math.min(this.y1,e)}px`,s.style.left=`${this.x1}px`,s.style.height=`${o}px`,s.classList.add("height","apply"),i.textContent=this.toFt(o))};pointerup=()=>{this.x1=null,this.y1=null,document.body.onpointermove=null}}export class Drag extends Gesture{constructor(t){super(t)}pointers=[];initialZoom=0;pointerup=()=>{this.pointers=[],this.hypo=0,document.body.onpointermove=null};getPointerXY({clientX:t,clientY:e}){if(this.$target.classList.contains("view"))return[t,e];const{dataset:{sy:s=1,z:i=1},offsetWidth:n,firstElementChild:o}=this.$area,a=s*i*Math.min(1,n/o.width.baseVal.value);return[t/a,e/a]}interpolate(){return this.$target.classList.contains("text-field")&&this.$target.dataset.sx<0||this.$target.classList.contains("furniture-embed")&&this.$view.dataset.sx<0}setActiveText(t){const e=t.classList.contains("text-field")&&t;document.body.dispatchEvent(new CustomEvent("focus-text",{detail:{$text:e}}))}focusEmbed(t){const e=t.target.closest(".furniture-embed"),s=e&&e.firstElementChild;document.body.dispatchEvent(new CustomEvent("focus-embed",{detail:{$embed:s}}))}initResize({clientX:t,clientY:e,target:s}){this.x1=t,this.y1=e,this.$target=s.closest(".furniture-embed").querySelector("svg"),this.width=parseInt(this.$target.getAttribute("width")),this.height=parseInt(this.$target.getAttribute("height")),document.body.onpointermove=this.resizeEmbed}resizeEmbed=({clientX:t,clientY:e})=>{const s=Math.max(this.width+(t-this.x1)*Math.sign(this.$view.dataset.sx),0),i=Math.max(this.height+this.y1-e,0);document.body.dispatchEvent(new CustomEvent("resize-embed",{detail:{width:s,height:i}}))};initRotate({target:t}){const{left:e,right:s,top:i,bottom:n}=this.$view.getBoundingClientRect();this.x1=(e+s)/2,this.y1=(i+n)/2,this.$target=t.closest(".furniture-embed").querySelector("svg"),document.body.onpointermove=this.rotateEmbed}rotateEmbed=({clientX:t,clientY:e})=>{const s=180*Math.atan2(e-this.y1,t-this.x1)/Math.PI*Math.sign(this.$view.dataset.sx);document.body.dispatchEvent(new CustomEvent("rotate-embed",{detail:{deg:s}}))};focusTarget(t){const e=t.closest(".furniture-embed");e?this.focusEmbed({target:e}):this.setActiveText(t)}pointerdown=t=>{const e=t.target.closest(".disabled");if(e)return this.focusTarget(e);if(t.target.classList.contains("embed-bin-button")||t.target.classList.contains("embed-duplicate-button"))return;const s=t.target.closest("[data-drag-area]");if(0===this.pointers.length&&s){if(this.focusEmbed(t),t.target.classList.contains("embed-resize-button"))return this.initResize(t);if(t.target.classList.contains("embed-rotate-button"))return this.initRotate(t);this.$area=s.dataset.dragArea?t.target.closest(s.dataset.dragArea):{dataset:{}};const{$scene:e}=this,i=t.target.closest(".draggable");this.$target=i;const{x:n=0,y:o=0}=i.dataset,[a,r]=this.getPointerXY(t);this.setActiveText(i),this.x1=this.interpolate()?-(e.width.baseVal.value-a-n):a-n,this.y1=r-o,this.initialZoom=+this.$zoomSlider.value,document.body.onpointermove=this.pointermove}this.pointers.push(t)};pointermove=t=>{const[e,s,i]=this.pointers,{$target:n,$scene:o}=this;if(i)return;if(s&&n.classList.contains("pinchable")){let i;t.pointerId===e.pointerId?(i=s,this.pointers[0]=t):(i=e,this.pointers[1]=t);const n=Math.hypot(i.clientX-t.clientX,i.clientY-t.clientY);return this.hypo=this.hypo||n,this.$zoomSlider.value=this.initialZoom+100*Math.min(1,n/this.hypo-1),this.zoom()}const[a,r]=this.getPointerXY(t);this.x2=this.x1-a,this.y2=this.y1-r,n.dataset.x=this.interpolate()?o.width.baseVal.value+this.x2:-this.x2,n.dataset.y=-this.y2,setTransform(n)}}