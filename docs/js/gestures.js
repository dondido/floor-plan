class Gesture{constructor(t){Object.assign(this,t)}attach(){document.body.onpointerdown=this.pointerdown,document.body.onpointerup=this.pointerup,document.body.onpointercancel=this.pointerup,document.body.onpointerout=this.pointerup}}export class Measure extends Gesture{constructor(t){super(t)}pointerdown=t=>{t.target.closest(".port")&&(!1===Number.isInteger(this.x1)?(this.x1=t.clientX,this.y1=t.clientY,document.body.onpointermove=this.pointermove):(this.pointermove(t),this.pointerup()))};toFt(t){const{$scene:e,$view:i,$zoomSlider:o,plan:s}=this,n=e.clientWidth/e.width.baseVal.value,h=1===n?e.clientHeight/e.height.baseVal.value:n,[r,p="0"]=String(t/(h*s.footRatio*i.dataset.scale*(1+o.value/50))).split(".");return`${r}' ${Math.round(1.2*p[0])}''`}pointermove=({clientX:t,clientY:e})=>{const{$ruler:i,$foots:o}=this,s=Math.abs(this.x1-t),n=Math.abs(this.y1-e);i.classList.remove("width","height"),s>n?(i.style.top=`${this.y1}px`,i.style.left=`${Math.min(this.x1,t)}px`,i.style.width=`${s}px`,i.classList.add("width","apply"),o.textContent=this.toFt(s)):(i.style.top=`${Math.min(this.y1,e)}px`,i.style.left=`${this.x1}px`,i.style.height=`${n}px`,i.classList.add("height","apply"),o.textContent=this.toFt(n))};pointerup=()=>{this.x1=null,this.y1=null,document.body.onpointermove=null}}export class Drag extends Gesture{constructor(t){super(t),this.$view.style.setProperty("--x",0),this.$view.style.setProperty("--y",0)}pointers=[];initialZoom=0;pointerup=()=>{this.pointers=[],this.hypo=0,document.body.onpointermove=null};pointerdown=t=>{0===this.pointers.length&&t.target.closest(".port")&&(this.x1=t.clientX-parseInt(getComputedStyle(this.$view).getPropertyValue("--x")),this.y1=t.clientY-parseInt(getComputedStyle(this.$view).getPropertyValue("--y")),this.initialZoom=+this.$zoomSlider.value,document.body.onpointermove=this.pointermove),this.pointers.push(t)};pointermove=t=>{const[e,i,o]=this.pointers;if(!o){if(i){let o;t.pointerId===e.pointerId?(o=i,this.pointers[0]=t):(o=e,this.pointers[1]=t);const s=Math.hypot(o.clientX-t.clientX,o.clientY-t.clientY);return this.hypo=this.hypo||s,this.$zoomSlider.value=this.initialZoom+100*Math.min(1,s/this.hypo-1),this.zoom()}this.x2=this.x1-t.clientX,this.y2=this.y1-t.clientY,this.$view.style.setProperty("--x",`${this.$view.offsetLeft-this.x2}px`),this.$view.style.setProperty("--y",`${this.$view.offsetTop-this.y2}px`)}}}