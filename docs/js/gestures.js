import linkActiveText from"./text-panel.js";import{setTransform}from"./utils.js";class Gesture{constructor(t){Object.assign(this,t)}attach(){document.body.onpointerdown=this.pointerdown,document.body.onpointerup=this.pointerup,document.body.onpointercancel=this.pointerup}}export class Measure extends Gesture{constructor(t){super(t)}pointerdown=t=>{t.target.closest(".port")&&(!1===Number.isInteger(this.x1)?(this.x1=t.clientX,this.y1=t.clientY,document.body.onpointermove=this.pointermove):(this.pointermove(t),this.pointerup()))};toFt(t){const{$scene:e,$view:s,plan:i}=this,{sy:o,z:n=1}=s.dataset,a=e.clientWidth/e.width.baseVal.value,r=1===a?e.clientHeight/e.height.baseVal.value:a,[h,l="0"]=String(t/(r*i.footRatio*o*n)).split(".");return`${h}' ${Math.round(1.2*l[0])}''`}pointermove=({clientX:t,clientY:e})=>{const{$ruler:s,$foots:i}=this,o=Math.abs(this.x1-t),n=Math.abs(this.y1-e);s.classList.remove("width","height"),o>n?(s.style.top=`${this.y1}px`,s.style.left=`${Math.min(this.x1,t)}px`,s.style.width=`${o}px`,s.classList.add("width","apply"),i.textContent=this.toFt(o)):(s.style.top=`${Math.min(this.y1,e)}px`,s.style.left=`${this.x1}px`,s.style.height=`${n}px`,s.classList.add("height","apply"),i.textContent=this.toFt(n))};pointerup=()=>{this.x1=null,this.y1=null,document.body.onpointermove=null}}export class Drag extends Gesture{constructor(t){super(t)}pointers=[];initialZoom=0;pointerup=()=>{this.pointers=[],this.hypo=0,document.body.onpointermove=null};getPointerXY({clientX:t,clientY:e}){const{sy:s=1,z:i=1}=this.$area.dataset,o=s*i;return[t/o,e/o]}interpolate(){return this.$target.classList.contains("text-field")&&this.$target.dataset.sx<0}setActiveText(t){t.classList.contains("text-field")&&linkActiveText(t)}pointerdown=t=>{const e=t.target.closest(".disabled");if(e)return this.setActiveText(e);const s=t.target.closest("[data-drag-area]");if(0===this.pointers.length&&s){this.$area=s.dataset.dragArea?t.target.closest(s.dataset.dragArea):{dataset:{}};const{$scene:e}=this,i=t.target.closest(".draggable"),{x:o=0,y:n=0}=i.dataset,[a,r]=this.getPointerXY(t);this.$target=i,this.setActiveText(i),this.x1=this.interpolate()?-(e.width.baseVal.value-a-o):a-o,this.y1=r-n,this.initialZoom=+this.$zoomSlider.value,document.body.onpointermove=this.pointermove}this.pointers.push(t)};pointermove=t=>{const[e,s,i]=this.pointers,{$target:o,$scene:n}=this;if(i)return;if(s&&o.classList.contains("pinchable")){let i;t.pointerId===e.pointerId?(i=s,this.pointers[0]=t):(i=e,this.pointers[1]=t);const o=Math.hypot(i.clientX-t.clientX,i.clientY-t.clientY);return this.hypo=this.hypo||o,this.$zoomSlider.value=this.initialZoom+100*Math.min(1,o/this.hypo-1),this.zoom()}const[a,r]=this.getPointerXY(t);this.x2=this.x1-a,this.y2=this.y1-r,o.dataset.x=this.interpolate()?n.width.baseVal.value+this.x2:-this.x2,o.dataset.y=-this.y2,setTransform(o)}}