import{Drag,Measure}from"./gestures.js";import{setTransform}from"./utils.js";let plan,$scene,$floor,$pristine,$selectedFloorOption,drag,measure;const handleJson=e=>e.json(),handleText=e=>e.text(),$mirror=document.querySelector(".mirror"),$dirty=document.createDocumentFragment(),$port=document.querySelector(".port"),$view=document.querySelector(".view"),$floorSelector=document.querySelector(".floor-selector"),$zoomSlider=document.querySelector(".zoom-slider"),$ruler=document.querySelector(".ruler"),$foots=document.querySelector(".foots"),$zoomControl=document.querySelector(".zoom-control"),$reverse=document.getElementById("reverse"),$measure=document.getElementById("measure"),floorOptions=[],resize=()=>{setDragGesture()},selectFloor=({target:e},t)=>{if(t||$floorSelector.classList.toggle("expand"),!1===e.classList.contains("selected")&&!1===e.isSameNode($floorSelector)){const t=`#${e.dataset.ref}`,r=document.querySelector(`[data-id=${e.dataset.ref}]`),o=document.querySelector(".highlight-summary");$selectedFloorOption.classList.remove("selected"),$selectedFloorOption=e,e.classList.add("selected"),$dirty.appendChild($floor),$floor=$dirty.querySelector(t)||$pristine.querySelector(t).cloneNode(!0),$scene.appendChild($floor),o&&o.classList.remove("highlight-summary"),r&&r.classList.add("highlight-summary"),restore()}},setDragGesture=()=>{$measure.checked=!1,drag.attach(),$ruler.classList.remove("apply")},toggleMeasure=()=>{$measure.checked?measure.attach():setDragGesture()},zoom=()=>{$view.dataset.z=1+$zoomSlider.value/plan.zoomRatio,$zoomControl.dataset.z=+$zoomSlider.value+100,$view.style.setProperty("--rz",$view.dataset.sx/$view.dataset.z),setTransform($view),$measure.checked&&setDragGesture()},wheel=({deltaY:e})=>{$zoomSlider.value=+$zoomSlider.value+(e>0?-4:4),zoom()},revertView=()=>{$view.dataset.sx*=-1,setTransform($view)},flipA=e=>{if("g"===e.nodeName&&"true"!==e.dataset.reversed){const t=e.querySelectorAll("text"),r=(e,r)=>{const o=t[r];if(void 0===o.dataset.flip){const t=e.getAttribute("transform"),r=/\(([^)]+)\)/.exec(t)[1].split(" ");o.dataset.transform=t,r[0]=-1,r[4]=e.getBoundingClientRect().right,o.dataset.flip=`matrix(${r.join()})`}o.setAttribute("transform",o.dataset.flip)};e.dataset.reversed=!0,$mirror.appendChild($pristine),$pristine.querySelectorAll(`#${e.id} text`).forEach(r),$pristine.remove()}},flipB=e=>{if("g"===e.nodeName&&"true"===e.dataset.reversed){const t=e=>e.setAttribute("transform",e.dataset.transform);e.dataset.reversed=!1,e.querySelectorAll("text").forEach(t)}},mirror=e=>{const t=$reverse.checked?-1:1;Array.from($floor.children,$reverse.checked?flipA:flipB),$floor.querySelectorAll(".text-field").forEach(e=>{const{sx:r=1,r:o=0}=e.dataset;e.dataset.sx=Math.abs(r)*t,e.dataset.r=Math.abs(o)*t,setTransform(e)}),e&&($view.dataset.sx*=-1,setTransform($view))},init=()=>{setScale(),drag.attach()},restore=()=>{$zoomSlider.value=0,setDragGesture(),mirror(),zoom(),init()},reset=()=>{$reverse.checked=!1,$floor.querySelector("foreignObject").innerHTML="",restore()},setScale=()=>{if(void 0===$view.dataset.sx){const{width:e,height:t}=$scene.getBoundingClientRect(),r=Math.min(window.innerWidth/e,window.innerHeight/t);$view.dataset.sy=r,$view.dataset.sx=r,setTransform($view)}},setFloor=({name:e,id:t,options:r},o)=>{const s=document.createElement("li"),a=document.createElementNS("http://www.w3.org/2000/svg","g"),n=`floor-${t}`,l=document.getElementById(t);a.setAttribute("id",n),l.setAttribute("idx",o),a.appendChild(l),r&&r.forEach(({id:e},t)=>{const r=document.getElementById(e);$pristine.appendChild(r),r.setAttribute("idx",o+(t+1)/1e3)}),a.insertAdjacentHTML("beforeend",'<foreignObject idx="99" data-drag-area=".view"></foreignObject>'),s.textContent=e,s.className="floor-option",floorOptions.push(s),$pristine.appendChild(a),0===o&&($floor=a.cloneNode(!0),s.classList.add("selected"),$scene.appendChild($floor)),s.dataset.ref=n,$floorSelector.appendChild(s)},insertView=e=>{$view.innerHTML=e,$scene=$view.firstElementChild,$pristine=$scene.cloneNode(),plan.floors.forEach(setFloor),drag=new Drag({$scene:$scene,$view:$view,$zoomSlider:$zoomSlider,zoom:zoom}),measure=new Measure({$scene:$scene,$view:$view,$zoomSlider:$zoomSlider,$ruler:$ruler,$foots:$foots,plan:plan}),init(),$selectedFloorOption=floorOptions[0],$floorSelector.onclick=selectFloor,$zoomSlider.oninput=zoom,$port.onwheel=wheel},handlePlan=e=>(plan=e,document.querySelector(".plan-name").textContent=plan.name,fetch(plan.src).then(handleText).then(insertView),e),addText=()=>{const e=document.createElement("pre");e.textContent="Add Text",e.className="draggable text-field",e.dataset.x=$scene.width.baseVal.value/2,e.dataset.y=$scene.height.baseVal.value/2,e.dataset.sx=Math.sign($view.dataset.sx),$floor.querySelector("foreignObject").appendChild(e),document.body.dispatchEvent(new CustomEvent("focus-text",{detail:{$text:e}})),setTransform(e)},planPromise=fetch("plan.json").then(handleJson).then(handlePlan);document.querySelector(".print-button").onclick=()=>window.print(),document.querySelector(".reset-button").onclick=reset,document.querySelector(".text-button").onclick=addText,$reverse.onchange=mirror,$measure.onchange=toggleMeasure,window.onresize=resize;export default()=>({planPromise:planPromise,$floor:$floor,$pristine:$pristine,$dirty:$dirty,selectFloor:selectFloor,mirror:mirror});